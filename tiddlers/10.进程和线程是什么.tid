created: 20220526113454162
creator: TidGiUser
difficulty: 6.1000000000000005
due: 20220611003935877
grade: 0
history: [{"due":"20220610080739908","interval":0,"difficulty":5,"stability":2,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220608080739908"}]
interval: 2
lapses: 1
modified: 20220610003935877
modifier: TidGiUser
reps: 1
retrievability: 0.9
review: 20220610003935877
stability: 1.4816364413634358
tags: 多线程基础知识 $:/tags/Commander/Working fx ?
title: 10.进程和线程是什么
tmap.id: c4a70894-83ab-4a70-be67-72314c47ab27
type: text/vnd.tiddlywiki

! 进程和线程是什么
!!进程是什么


''进程是操作系统资源调度的基本单位，应用程序回以进程的形式，运行在操作系统之上，享受操作系统提供的服务''
[img[截屏2022-05-26 19.39.57.png]]

程序段一般也被称为代码段，代码段是进程的程序指令在内存中的位置，包含了需要执行的指令集合。

数据段是进程的操作数据在内存中的位置，包含了需要操作的数据集合;

程序控制块 PCB(Program Control Block)包含进程的描述信息和控制信息，''是进程存在的唯一标志''

PCB包含四大内容：

(1)进程的描述信息。主要包括了''进程 ID 和进程名称''——进程 ID 是唯一的，代表进程的 身份;''进程的状态——比如运行、就绪、阻塞'';''进程优先级——是进程调度的重要依据''。
(2)进程的调度信息。主要包括了''程序的入口地址''——程序的第一行指令的内存地址，从这里开始程序的执行;''通信信息''——进程间通信时的消息队列。
(3)进程的资源信息。主要包括了''内存信息''——内存占用情况和内存管理所用的数据结构; ''I/O 设备信息''——所用的 I/O 设备编号及相应数据结构;''文件句柄''——所打开文件的信息。
(4)进程上下文。主要包括了执行时的''各种 CPU 寄存器的值，当前的程序计数器(PC)值， 以及各种栈的值等''，组成进程上下文，也即进程的环境。在操作系统进程切换时，当前进程被迫让出 CPU，当前进程的上下文就保存在 PCB 结构中，''供下次恢复运行时使用''。

''现代操作系统中，进程是并发执行的，任何进程都可以同其他进程一起进行。在进程内部，代 码段和数据段，有自己的独立地址空间;不同进程的地址空间是互相隔离的''

!! java进程

Java 编写的程序都运行在 Java 虚拟机(JVM)中，每当使用 java 命令启动一个 Java 应用程序时，就会启动一个 JVM 进程。在这个 JVM 进程内部，所有 Java 程序代码的运行都是以线程来 运行的。JVM 找到程序程序的入口点 main()方法，然后运行 main()方法，这样就产生了一个线程， 这个线程称之为''主线程''。''当 main()方法结束后，主线程运行完成。JVM 进程也随即退出''

!! 线程

线程是程序执行的最小单位，是CPU调度的最小单位，''指的是“进程代码段”一次的顺序执行流程''

一个标准的线程主要由以下三个部分组成:线程描述信息、程序计数器(PC)、和栈内存组成

[img[截屏2022-05-26 19.40.22.png]]

!! 进程与线程的区别

总结一下进程与线程的区别，主要为以下几点:
(1)线程是“进程代码段”的一次的顺序执行流程。一个进程由一个或多个线程组成;一个 进程至少有一个线程。
(2)''线程是 CPU 调度的最小单位;进程是操作系统分配资源的最小单位''。线程的划分尺度 小于进程，使得多线程程序的并发性高。
(3)线程是出于高并发的调度诉求，从进程内部演进而来。线程的出现，既充分发挥 CPU 的计算性能，弥补进程调度的过于笨重。
''(4)进程之间是相互独立的;但进程内部各个线程之间，并不完全独立。各个线程之间共享 进程的方法区内存、堆内存、系统资源(文件句柄、系统信号等等)。
(5)切换速度不同:线程上下文切换比进程上下文切换要快得多。所以，有的时候，线程也 称之为轻量级进程。''