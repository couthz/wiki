created: 20220606020323592
creator: TidGiUser
difficulty: 6.1000000000000005
due: 20220611004308249
grade: 0
history: [{"due":"20220610080840472","interval":0,"difficulty":5,"stability":2,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220608080840472"}]
interval: 2
lapses: 1
modified: 20220610004308249
modifier: TidGiUser
reps: 1
retrievability: 0.9
review: 20220610004308249
stability: 1.4816364413634358
tags: IO fx ?
title: 21.Linux进程文件描述符数量限制
type: text/vnd.tiddlywiki

这里所涉及的配置，就是Linux操作系统中文件句柄数的限制。在生产环境Linux系统 ，基本上都需要解除文件句柄数的限制。原因是，Linux的系统默认值为1024，也就是说，''一个进程最多可以接受1024个socket连接''。这是远远不够的。

1. ulimit -n 1000000

使用ulimit命令有一个缺陷，''该命令仅仅只能修改当前用户环境的一些基础限制，仅在当前用户环境有效。也即是说，在当前的终端工具连接当前shell期间，修改是有效的;一 旦断开用户会话，或者说用户退出Linux后，它的数值就又变回系统默认的1024了''。并且， 系统重启后，句柄数量又会恢复为默认值。
ulimit命令只能用于临时修改，如果想永久地把最大文件描述符数量值保存下来，''可以 编辑/etc/rc.local开机启动文件，在文件中添加如下内容:
    ulimit -SHn 1000000''


以上示例增加-S和-H两个命令选项。选项-S表示软性极限值，-H表示硬性极限值。''硬性极限是实际的限制，就是最大可以是100万，不能再多了。软性极限值则是系统发出警告 (Warning)的极限值，超过这个极限值，内核会发出警告''。
普通用户通过ulimit命令，可将软极限更改到硬极限的最大设置值。如果要更改硬极限，''必须拥有root用户权限。''

2. /etc/security/limits.conf

终极解除Linux系统的最大文件打开数量的限制，可以通过编辑Linux的极限配置文件 /etc/security/limits.conf来解决，修改此文件，加入如下内容:

soft nofile 1000000


hard nofile 1000000

